@using System.Reflection
@using AlgoPuzzles.Helpers
@using System.ComponentModel

@functions {    
}

<div>
    @foreach (PropertyInfo prop in Model.GetType().GetProperties(BindingFlags.Public | BindingFlags.DeclaredOnly | BindingFlags.Instance))
    {
        if (prop.GetIndexParameters().GetLength(0) > 0) { continue; }

        var name = prop.GetDisplay();
        var rawVal = prop.GetValue(Model);

        string value;
        if (rawVal == null)
        {
            value = string.Empty;
        }
        else
        {
            //var convertor = TypeDescriptor.CreateProperty(Model.GetType(), prop.Name, prop.PropertyType).Converter;
            var convertor = TypeDescriptor.GetConverter(prop.PropertyType);
            if (convertor?.CanConvertTo(typeof(string)) ?? false)
            {
                value = convertor.ConvertToString(rawVal);
            }
            else
            {
                value = rawVal.ToString();
            }
        }

        <div class="form-group">
            <label for="@(prop.Name)" class="control-label small">@name</label>
            <input type="text" class="form-control" name="@(prop.Name)" id="@(prop.Name)" value="@(value)" />
        </div>
    }
</div>

@*@<pre>@JsonConvert.SerializeObject(Model)</pre>*@

